@use 'sass:map';
@use 'sass:meta';

/* ------------------- rem to px ------------------- */
@function rem($size, $font-size: $font-size) {
  $font-size: $font-size + 0px;
  $remSize: $size / $font-size;
  @return #{$remSize}rem;
}
// em to px
@function em($size, $font-size: $font-size) {
  $font-size: $font-size + 0px;
  $remSize: $size / $font-size;
  @return #{$remSize}em;
}

/* ------------------- Breakpoints ------------------- */
@mixin screen-up($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media #{meta.inspect(map.get($breakpoints, $breakpoint))} {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map.keys($breakpoints)}.";
  }
}

// max-width (container-width)
@mixin screen-down($widths) {
  @if map.has-key($max-widths, $widths) {
    @media #{meta.inspect(map.get($max-widths, $widths))} {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$widths}`. "
        + "Available breakpoints are: #{map.keys($max-widths)}.";
  }
}

/* ------------------- input placeholder ------------------- */
@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

/* ------------------- ::after ------------------- */
@mixin pseudo(
  $width: 100%,
  $height: 100%,
  $display: inline-block,
  $pos: absolute,
  $content: ''
) {
  content: $content;
  display: $display;
  position: $pos;
  @include box($width, $height);
}

/* ------------------- text-ellipsis ------------------- */
@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
